
@article{gore_valentinis_2012,
	title = {Valentini’s Cut-Elimination for Provability Logic Resolved},
	volume = {5},
	rights = {https://www.cambridge.org/core/terms},
	issn = {1755-0203, 1755-0211},
	url = {https://www.cambridge.org/core/product/identifier/S1755020311000323/type/journal_article},
	doi = {10.1017/S1755020311000323},
	abstract = {In 1983, Valentini presented a syntactic proof of cut-elimination for a sequent calculus {GLSV} for the provability logic {GL} where we have added the subscript v for “Valentini”. The sequents in {GLSV} were built from sets, as opposed to multisets, thus avoiding an explicit contraction rule. From a syntactic point of view, it is more satisfying and formal to explicitly identify the applications of the contraction rule that are ‘hidden’ in these set-based proofs of cut-elimination. But recently it has been claimed that Valentini’s arguments to eliminate cut do not terminate when applied to a multiset formulation of {GLSV} with an explicit rule of contraction. Here we refute this claim by placing Valentini’s arguments in a formal setting and proving cut-elimination for sequents built from multisets. The case of contractions above cut requires special care when the cut-formula is boxed. We deal with this case using a new transformation based on Valentini’s original arguments. Valentini’s original proof relies on a novel induction parameter called “width” which is computed “globally”. In his original proof, it is diﬃcult to verify the induction argument based on “width”. In our formulation however, veriﬁcation of this fact is straightforward.},
	pages = {212--238},
	number = {2},
	journaltitle = {The Review of Symbolic Logic},
	shortjournal = {The Review of Symbolic Logic},
	author = {Goré, Rajeev and Ramanayake, Revantha},
	urldate = {2024-07-04},
	date = {2012-06},
	langid = {english},
	file = {Goré and Ramanayake - 2012 - VALENTINI’S CUT-ELIMINATION FOR PROVABILITY LOGIC .pdf:C\:\\Users\\SnO2WMaN\\Zotero\\storage\\NPZPX7MP\\Goré and Ramanayake - 2012 - VALENTINI’S CUT-ELIMINATION FOR PROVABILITY LOGIC .pdf:application/pdf},
}

@incollection{das_cut-elimination_2021,
	location = {Cham},
	title = {Cut-Elimination for Provability Logic by Terminating Proof-Search: Formalised and Deconstructed Using Coq},
	volume = {12842},
	isbn = {978-3-030-86058-5 978-3-030-86059-2},
	url = {https://link.springer.com/10.1007/978-3-030-86059-2_18},
	shorttitle = {Cut-Elimination for Provability Logic by Terminating Proof-Search},
	abstract = {Recently, Brighton gave another cut-admissibility proof for the standard set-based sequent calculus {GLS} for modal provability logic {GL}. One of the two induction measures that Brighton uses is novel: the maximum height of regress trees in an auxiliary calculus called {RGL}. Tautology elimination is established rather than direct cut-admissibility, and at some points the input derivation appears to be ignored in favour of a derivation obtained by backward proof-search. By formalising the {GLS} calculus and the proofs in Coq, we show that: (1) the use of the novel measure is problematic under the usual interpretation of the Gentzen comma as set union, and a multiset-based sequent calculus provides a more natural formulation; (2) the detour through tautology elimination is unnecessary; and (3) we can use the same induction argument without regress trees to obtain a direct proof of cut-admissibility that is faithful to the input derivation.},
	pages = {299--313},
	booktitle = {Automated Reasoning with Analytic Tableaux and Related Methods},
	publisher = {Springer International Publishing},
	author = {Goré, Rajeev and Ramanayake, Revantha and Shillito, Ian},
	editor = {Das, Anupam and Negri, Sara},
	urldate = {2024-09-04},
	date = {2021},
	langid = {english},
	doi = {10.1007/978-3-030-86059-2_18},
	note = {Series Title: Lecture Notes in Computer Science},
	keywords = {Coq, Cut-Elimination, Provability Logic},
	file = {PDF:C\:\\Users\\SnO2WMaN\\Zotero\\storage\\U9B84PIQ\\Goré et al. - 2021 - Cut-Elimination for Provability Logic by Terminating Proof-Search Formalised and Deconstructed Usin.pdf:application/pdf},
}

@article{maggesi_mechanising_2023,
	title = {Mechanising Gödel–Löb Provability Logic in {HOL} Light},
	volume = {67},
	issn = {0168-7433, 1573-0670},
	url = {https://link.springer.com/10.1007/s10817-023-09677-z},
	doi = {10.1007/s10817-023-09677-z},
	abstract = {We introduce our implementation in {HOL} Light of the metatheory for Gödel–Löb provability logic ({GL}), covering soundness and completeness w.r.t. possible world semantics and featuring a prototype of a theorem prover for {GL} itself. The strategy we develop here to formalise the modal completeness proof overcomes the technical difﬁculty due to the non-compactness of {GL} and is an adaptation—according to the formal language and tools at hand—of the proof given in George Boolos’ 1995 monograph. Our theorem prover for {GL} relies then on this formalisation, is implemented as a tactic of {HOL} Light that mimics the proof search in the labelled sequent calculus G3KGL, and works as a decision algorithm for the provability logic: if the algorithm positively terminates, the tactic succeeds in producing a {HOL} Light theorem stating that the input formula is a theorem of {GL}; if the algorithm negatively terminates, the tactic extracts a model falsifying the input formula. We discuss our code for the formal proof of modal completeness and the design of our proof search algorithm. Furthermore, we propose some examples of the latter’s interactive and automated use.},
	pages = {29},
	number = {3},
	journaltitle = {Journal of Automated Reasoning},
	shortjournal = {J Autom Reasoning},
	author = {Maggesi, Marco and Perini Brogi, Cosimo},
	urldate = {2024-07-04},
	date = {2023-09},
	langid = {english},
	keywords = {{HOL} Light},
	file = {Maggesi and Perini Brogi - 2023 - Mechanising Gödel–Löb Provability Logic in HOL Lig.pdf:C\:\\Users\\SnO2WMaN\\Zotero\\storage\\MQ5QFNV7\\Maggesi and Perini Brogi - 2023 - Mechanising Gödel–Löb Provability Logic in HOL Lig.pdf:application/pdf},
}

@article{valentini_modal_1983,
	title = {The modal logic of provability: Cut-elimination},
	volume = {12},
	rights = {http://www.springer.com/tdm},
	issn = {0022-3611, 1573-0433},
	url = {http://link.springer.com/10.1007/BF00249262},
	doi = {10.1007/BF00249262},
	shorttitle = {The modal logic of provability},
	pages = {471--476},
	number = {4},
	journaltitle = {Journal of Philosophical Logic},
	shortjournal = {J Philos Logic},
	author = {Valentini, Silvio},
	urldate = {2024-07-04},
	date = {1983-11},
	langid = {english},
	file = {Valentini - 1983 - The modal logic of provability Cut-elimination.pdf:C\:\\Users\\SnO2WMaN\\Zotero\\storage\\RC9F89RB\\Valentini - 1983 - The modal logic of provability Cut-elimination.pdf:application/pdf},
}

@misc{kurahashi_smullyans_2024,
	title = {Smullyan's truth and provability},
	url = {http://arxiv.org/abs/2410.17895},
	doi = {10.48550/arXiv.2410.17895},
	abstract = {We revisit Smullyan's paper ``Truth and Provability'' for three purposes. First, we introduce the notion of Smullyan models to give a precise definition for Smullyan's framework discussed in that paper. Second, we clarify the relationship between Theorems F, T, and G proved by Smullyan and other newly introduced properties for Smullyan models in terms of both implications and non-implications. Third, we construct two Smullyan models based on arithmetic and show the correspondence between the properties of these Smullyan models and those concerning truth and provability in arithmetic.},
	number = {{arXiv}:2410.17895},
	publisher = {{arXiv}},
	author = {Kurahashi, Taishi and Tominaga, Kohei},
	urldate = {2024-10-26},
	date = {2024-10-23},
	eprinttype = {arxiv},
	eprint = {2410.17895},
	keywords = {Mathematics - Logic},
	file = {Preprint PDF:C\:\\Users\\SnO2WMaN\\Zotero\\storage\\6IIDGVNK\\Kurahashi と Tominaga - 2024 - Smullyan's truth and provability.pdf:application/pdf;Snapshot:C\:\\Users\\SnO2WMaN\\Zotero\\storage\\8VDU4KGE\\2410.html:text/html},
}

@thesis{shankar_proof-checking_1986,
	title = {Proof-checking metamathematics (theorem-proving)},
	abstract = {Formal proof-checking has long been recognized as an interesting application of computers. It has often been claimed that significant proofs in mathematics cannot be checked using an automatic proof-checker, and that formal proofs lack the intuitive plausibility and insight that informal proofs possess. We argue against these claims by presenting machine-checked versions of some landmark proofs in metamathematics, such as those of the tautology theorem, Godel's incompleteness theorem, and the Church-Rosser theorem. These proofs were checked using the Boyer-Moore theorem power. The tautology theorem and the incompleteness theorem are proved by first defining a proof-checker for the formal theory Z2 in the Boyer-Moore logic. The theory Z2 consists of the rules and axioms for Shoenfield's first-order logic with the axioms of a theory of hereditarily finite sets due to Cohen. A tautology-checker is defined for Z2 formulas and is shown to be correct with respect to the truth-table definition of a tautology. Every tautology is shown to have a proof by defining a Lisp function which constructs such a proof. The tautology theorem is then used as a sound derived inference rule to demonstrate that any specific tautology is provable in Z2, without actually constructing the corresponding formal proof.To prove Godel's incompleteness theorem, a Lisp interpreter is defined in Lisp. The interpreter is shown to be representable in Z2 under an encoding of Lisp data-structures as sets. Metatheoretic functions such as the Z2 proof-checker are shown to be computable by means of the Lisp interpreter. The representability of the metatheory of Z2 in Z2 permits the construction of an undecidable sentence. If the undecidable sentence is either provable or disprovable, then it is shown to be both provable and disprovable. Z2 is therefore either incomplete or inconsistent.The mechanical proof of the Church-Rosser theorem is carried out by formalizing the syntax of lambda calculus in the Boyer-Moore logic. The theorem asserts that if the term X is reduced to Y in one way, and Z in another, then Y and Z can both be reduced to a common W. The mechanical proof involves constructing the term W and the reductions from Y and Z to W. This proof was actually carried out by formally mapping the problem to a formalization of lambda calculus which uses the de Bruijn representation. A version of the Tait/Martin-Lof proof of the Church-Rosser theorem is then carried out for this representation.},
	institution = {The University of Texas at Austin},
	type = {phdthesis},
	author = {Shankar, Natarajan},
	date = {1986},
	annotation = {{AAI}8717580},
}

@article{swierczkowski_finite_2003,
	title = {Finite sets and Gödel's incompleteness theorems},
	volume = {422},
	doi = {10.4064/dm422-0-1},
	pages = {1--58},
	journaltitle = {Dissertationes Mathematicae - {DISS} {MATH}},
	author = {Świerczkowski, S.},
	date = {2003-01},
	file = {dm422-0-01:C\:\\Users\\SnO2WMaN\\Zotero\\storage\\3EWQW2P6\\dm422-0-01.pdf:application/pdf},
}

@article{paulson_mechanised_2015,
	title = {A Mechanised Proof of Gödel’s Incompleteness Theorems Using Nominal Isabelle},
	volume = {55},
	issn = {0168-7433, 1573-0670},
	url = {http://link.springer.com/10.1007/s10817-015-9322-8},
	doi = {10.1007/s10817-015-9322-8},
	abstract = {An Isabelle/{HOL} formalisation of G¨odel’s two incompleteness theorems is presented. The work follows S´ wierczkowski’s detailed proof of the theorems using hereditarily finite ({HF}) set theory (Dissertationes Mathematicae 422, 1–58, 2003). Avoiding the usual arithmetical encodings of syntax eliminates the necessity to formalise elementary number theory within an embedded logical calculus. The Isabelle formalisation uses two separate treatments of variable binding: the nominal package (Logical Methods in Computer Science 8(2:14), 1–35, 2012) is shown to scale to a development of this complexity, while de Bruijn indices (Indagationes Mathematicae 34, 381–392, 1972) turn out to be ideal for coding syntax. Critical details of the Isabelle proof are described, in particular gaps and errors found in the literature.},
	pages = {1--37},
	number = {1},
	journaltitle = {Journal of Automated Reasoning},
	shortjournal = {J Autom Reasoning},
	author = {Paulson, Lawrence C.},
	urldate = {2024-10-27},
	date = {2015-06},
	langid = {english},
	file = {PDF:C\:\\Users\\SnO2WMaN\\Zotero\\storage\\2Z5V536A\\Paulson - 2015 - A Mechanised Proof of Gödel’s Incompleteness Theorems Using Nominal Isabelle.pdf:application/pdf},
}

@book{shankar_metamathematics_1994,
	title = {Metamathematics, Machines and Gödel’s Proof},
	series = {Cambridge Tracts in Theoretical Computer Science},
	publisher = {Cambridge University Press},
	author = {Shankar, N.},
	date = {1994},
}

@misc{oconnor_essential_2006,
	title = {Essential Incompleteness of Arithmetic Verified by Coq},
	url = {http://arxiv.org/abs/cs/0505034},
	doi = {10.48550/arXiv.cs/0505034},
	abstract = {A constructive proof of the Goedel-Rosser incompleteness theorem has been completed using the Coq proof assistant. Some theory of classical first-order logic over an arbitrary language is formalized. A development of primitive recursive functions is given, and all primitive recursive functions are proved to be representable in a weak axiom system. Formulas and proofs are encoded as natural numbers, and functions operating on these codes are proved to be primitive recursive. The weak axiom system is proved to be essentially incomplete. In particular, Peano arithmetic is proved to be consistent in Coq's type theory and therefore is incomplete.},
	number = {{arXiv}:cs/0505034},
	publisher = {{arXiv}},
	author = {O'Connor, Russell},
	urldate = {2024-10-27},
	date = {2006-05-11},
	eprinttype = {arxiv},
	eprint = {cs/0505034},
	note = {version: 2},
	keywords = {Computer Science - Logic in Computer Science},
	file = {Preprint PDF:C\:\\Users\\SnO2WMaN\\Zotero\\storage\\XNM67A5F\\O'Connor - 2006 - Essential Incompleteness of Arithmetic Verified by Coq.pdf:application/pdf;Snapshot:C\:\\Users\\SnO2WMaN\\Zotero\\storage\\VVBXZHFY\\0505034.html:text/html},
}

@online{wolfgang_tree_nodate,
	title = {Tree Proof Generator},
	url = {https://www.umsu.de/trees/},
	author = {Wolfgang, Schwarz},
	urldate = {2024-10-28},
	file = {Tree Proof Generator:C\:\\Users\\SnO2WMaN\\Zotero\\storage\\5Q68E6ZL\\trees.html:text/html},
}
